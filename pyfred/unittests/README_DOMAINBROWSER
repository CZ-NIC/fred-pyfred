=== Unittesty pro Domainbrowser ===

Kompatibilita:

Pozor! Unittesty ke správnému běhu potřebují unitesty, které jsou součástí python verze 2.7. Pro starší python verze je k dispozici backport unittest2 na https://pypi.python.org/pypi/unittest2. Testy jej automaticky importují, pokud nová verze nebyla v systému nalezena.


Unittesty se spouštějí příkazem:

  fred-manager pyfred_domainbrowser_unittests

Pokud fred-manager ještě tento příkaz nezná (je ve větvi 8783_pyfred_domainbrowser_unittests), tak se testy mohou spustit skriptem:

  sh $PYTHON_SITE_PACKAGES/pyfred/unittests/run_test_domainbrowser

a nebo z adresáře $PYTHON_SITE_PACKAGES:

  python -m pyfred.unittests.domainbrowser.run --verbose pyfred.unittests.test_domainbrowser

Testy jsou rozděleny do modulů contact, nsset, keyset, domain. Pokud chcete spustit jen jeden modul místo všech, tak se přepněte do adresáře $PYTHON_SITE_PACKAGES a zadejte jen jméno modulu. Příklad spuštění jen modulu pro testování kontaktů:

  python -m pyfred.unittests.domainbrowser.run --verbose pyfred.unittests.domainbrowser.contact

Chtete-li spustit jen jeden test (nebo více konkrétně vyjmenovaných), tak zadejte i třídu a název testu. Příkad jen spuštění testu test_020:

  python -m pyfred.unittests.domainbrowser.run --verbose pyfred.unittests.domainbrowser.contact.Test.test_020


=== Unittesty bez databáze - testy na poškozená data ===

Unittesty si pokaždé vytvoří databázi, na které testy probíhají. Je ale možné testovat i bez databáze nad předpřipravenými daty. To se provádí nastavením proměnné prostředí NODB. Spuštění testů bez databáze pak vypadá takto:

  NODB=y python -m pyfred.unittests.domainbrowser.run --verbose pyfred.unittests.test_domainbrowser

Testování bez databáze umožňuje také testovat chování kódu v případě, že data v databázi jsou nějak poškozena. Připravená data obsahují taková umělá poškození a ta se pak testují. Testy na poškozená data se spouští jen v režimu bez databáze. Jinak se automaticky přeskakují.


=== Aktualizace testů ===

Aktualizace testů kvůli změnám ve struktuře databáze se provede následujícím způsobem:

  1. Provede se nová instalace freda:

       fred-manager install

  2. Spustí se fred server:

       fred-manager start

  3. Vytvoří se nový databázový dump příkazem:

       fred-manager pyfred_domainbrowser_create_unittests
     nebo skriptem:
       sh $PYTHON_SITE_PACKAGES/pyfred/unittests/domainbrowser/create-db-objects.sh

     Pořadí bodů 1. a 2. je potřeba dodržet, protože testy vyřadují konkrétní ID pro objekty. Pokud by před spuštěním v databázi nějaké objekty nebyly nebo naopak byly navíc, tak se novým objektům přiřadí jiná ID než testy očekávají. Databázový dump se uloží do $PYTHON_SITE_PACKAGES/pyfred/unittests/dbdata/fred.dump.sql a tím přepíše původní dump. Testy je možné spustit s jiným databázovým dumpem, než výchozím pomocí proměnné prostředí USEDB:

       USEDB=my.dump.sql python -m pyfred.unittests.domainbrowser.run --verbose pyfred.unittests.test_domainbrowser

  4. Obnoví se zdrojová a referenční data, která aktualizací zastarala. Typicky se jedná o hodnoty datetime a generovaná hesla.
     Obnova se provede nastavením proměnné prostředí TRACK=yes a testy se spustí nad databází:

       TRACK=yes python -m pyfred.unittests.domainbrowser.run --verbose pyfred.unittests.test_domainbrowser

     Je potřeba zkontrolovat, že změny v datech jsou jen ty požadované a že tam nejsou nežádané změny. Zdrojová data jsou uložena v adresáři pyfred/unittests/domainbrowser/dbdata/ a referenční data v pyfred/unittests/domainbrowser/refdata. Všechna data jsou ve formátu yaml, který je dobře čitelný a lze jej snadno editovat.


=== Problémy s testy ===

Adresář databáze, kterou si testy vytváření a port na které běží, je definován ve skriptu pyfred/unittests/pgman.py ve třídě Config. Pokud je zde uvedený adresář nebo port v systému již obsazen, tak testy neprojdou.

Zdeněk Böhm, 14.6.2013
